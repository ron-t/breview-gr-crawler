//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Review_Book", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoodReadsCrawler.Book), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Review), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Review_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoodReadsCrawler.User), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Review), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Book_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoodReadsCrawler.Author), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Book), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Friendship_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoodReadsCrawler.User), "Friendship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Friendship), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Activity_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoodReadsCrawler.User), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Activity), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_Genre_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoodReadsCrawler.User), "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Genre), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "FK_ReadingChallenge_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoodReadsCrawler.User), "ReadingChallenge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.ReadingChallenge), true)]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "GroupMember", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.User))]
[assembly: EdmRelationshipAttribute("GoodReadsCrawlerModel", "ListVote", "List", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.List), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoodReadsCrawler.User))]

#endregion

namespace GoodReadsCrawler
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GoodReadsCrawlerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GoodReadsCrawlerEntities object using the connection string found in the 'GoodReadsCrawlerEntities' section of the application configuration file.
        /// </summary>
        public GoodReadsCrawlerEntities() : base("name=GoodReadsCrawlerEntities", "GoodReadsCrawlerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoodReadsCrawlerEntities object.
        /// </summary>
        public GoodReadsCrawlerEntities(string connectionString) : base(connectionString, "GoodReadsCrawlerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GoodReadsCrawlerEntities object.
        /// </summary>
        public GoodReadsCrawlerEntities(EntityConnection connection) : base(connection, "GoodReadsCrawlerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friendship> Friendships
        {
            get
            {
                if ((_Friendships == null))
                {
                    _Friendships = base.CreateObjectSet<Friendship>("Friendships");
                }
                return _Friendships;
            }
        }
        private ObjectSet<Friendship> _Friendships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> Lists
        {
            get
            {
                if ((_Lists == null))
                {
                    _Lists = base.CreateObjectSet<List>("Lists");
                }
                return _Lists;
            }
        }
        private ObjectSet<List> _Lists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReadingChallenge> ReadingChallenges
        {
            get
            {
                if ((_ReadingChallenges == null))
                {
                    _ReadingChallenges = base.CreateObjectSet<ReadingChallenge>("ReadingChallenges");
                }
                return _ReadingChallenges;
            }
        }
        private ObjectSet<ReadingChallenge> _ReadingChallenges;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Friendships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriendships(Friendship friendship)
        {
            base.AddObject("Friendships", friendship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLists(List list)
        {
            base.AddObject("Lists", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReadingChallenges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReadingChallenges(ReadingChallenge readingChallenge)
        {
            base.AddObject("ReadingChallenges", readingChallenge);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="retrievedAt">Initial value of the retrievedAt property.</param>
        public static Activity CreateActivity(global::System.Int32 userId, global::System.DateTime retrievedAt)
        {
            Activity activity = new Activity();
            activity.userId = userId;
            activity.retrievedAt = retrievedAt;
            return activity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String activityHTML
        {
            get
            {
                return _activityHTML;
            }
            set
            {
                OnactivityHTMLChanging(value);
                ReportPropertyChanging("activityHTML");
                _activityHTML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("activityHTML");
                OnactivityHTMLChanged();
            }
        }
        private global::System.String _activityHTML;
        partial void OnactivityHTMLChanging(global::System.String value);
        partial void OnactivityHTMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime retrievedAt
        {
            get
            {
                return _retrievedAt;
            }
            set
            {
                if (_retrievedAt != value)
                {
                    OnretrievedAtChanging(value);
                    ReportPropertyChanging("retrievedAt");
                    _retrievedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("retrievedAt");
                    OnretrievedAtChanged();
                }
            }
        }
        private global::System.DateTime _retrievedAt;
        partial void OnretrievedAtChanging(global::System.DateTime value);
        partial void OnretrievedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String activityTimestampString
        {
            get
            {
                return _activityTimestampString;
            }
            set
            {
                OnactivityTimestampStringChanging(value);
                ReportPropertyChanging("activityTimestampString");
                _activityTimestampString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("activityTimestampString");
                OnactivityTimestampStringChanged();
            }
        }
        private global::System.String _activityTimestampString;
        partial void OnactivityTimestampStringChanging(global::System.String value);
        partial void OnactivityTimestampStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Activity_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Activity_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Activity_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Activity_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GoodReadsCrawlerModel.FK_Activity_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Author CreateAuthor(global::System.Int32 id, global::System.String name)
        {
            Author author = new Author();
            author.id = id;
            author.name = name;
            return author;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Book_Author", "Book")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("GoodReadsCrawlerModel.FK_Book_Author", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("GoodReadsCrawlerModel.FK_Book_Author", "Book", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="isProcessed">Initial value of the isProcessed property.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.String title, global::System.Boolean isProcessed)
        {
            Book book = new Book();
            book.id = id;
            book.title = title;
            book.isProcessed = isProcessed;
            return book;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isProcessed
        {
            get
            {
                return _isProcessed;
            }
            set
            {
                OnisProcessedChanging(value);
                ReportPropertyChanging("isProcessed");
                _isProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isProcessed");
                OnisProcessedChanged();
            }
        }
        private global::System.Boolean _isProcessed;
        partial void OnisProcessedChanging(global::System.Boolean value);
        partial void OnisProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String isbn
        {
            get
            {
                return _isbn;
            }
            set
            {
                OnisbnChanging(value);
                ReportPropertyChanging("isbn");
                _isbn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("isbn");
                OnisbnChanged();
            }
        }
        private global::System.String _isbn;
        partial void OnisbnChanging(global::System.String value);
        partial void OnisbnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> authorId
        {
            get
            {
                return _authorId;
            }
            set
            {
                OnauthorIdChanging(value);
                ReportPropertyChanging("authorId");
                _authorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("authorId");
                OnauthorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _authorId;
        partial void OnauthorIdChanging(Nullable<global::System.Int32> value);
        partial void OnauthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> avgRating
        {
            get
            {
                return _avgRating;
            }
            set
            {
                OnavgRatingChanging(value);
                ReportPropertyChanging("avgRating");
                _avgRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("avgRating");
                OnavgRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _avgRating;
        partial void OnavgRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnavgRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastUpdated
        {
            get
            {
                return _lastUpdated;
            }
            set
            {
                OnlastUpdatedChanging(value);
                ReportPropertyChanging("lastUpdated");
                _lastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastUpdated");
                OnlastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastUpdated;
        partial void OnlastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnlastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numTextReviews
        {
            get
            {
                return _numTextReviews;
            }
            set
            {
                OnnumTextReviewsChanging(value);
                ReportPropertyChanging("numTextReviews");
                _numTextReviews = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numTextReviews");
                OnnumTextReviewsChanged();
            }
        }
        private Nullable<global::System.Int32> _numTextReviews;
        partial void OnnumTextReviewsChanging(Nullable<global::System.Int32> value);
        partial void OnnumTextReviewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numRatings
        {
            get
            {
                return _numRatings;
            }
            set
            {
                OnnumRatingsChanging(value);
                ReportPropertyChanging("numRatings");
                _numRatings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numRatings");
                OnnumRatingsChanged();
            }
        }
        private Nullable<global::System.Int32> _numRatings;
        partial void OnnumRatingsChanging(Nullable<global::System.Int32> value);
        partial void OnnumRatingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ratingDist
        {
            get
            {
                return _ratingDist;
            }
            set
            {
                OnratingDistChanging(value);
                ReportPropertyChanging("ratingDist");
                _ratingDist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ratingDist");
                OnratingDistChanged();
            }
        }
        private global::System.String _ratingDist;
        partial void OnratingDistChanging(global::System.String value);
        partial void OnratingDistChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Review_Book", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("GoodReadsCrawlerModel.FK_Review_Book", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("GoodReadsCrawlerModel.FK_Review_Book", "Review", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Book_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GoodReadsCrawlerModel.FK_Book_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GoodReadsCrawlerModel.FK_Book_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GoodReadsCrawlerModel.FK_Book_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("GoodReadsCrawlerModel.FK_Book_Author", "Author", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Friendship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friendship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Friendship object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="friendIdString">Initial value of the friendIdString property.</param>
        public static Friendship CreateFriendship(global::System.Int32 userId, global::System.String friendIdString)
        {
            Friendship friendship = new Friendship();
            friendship.userId = userId;
            friendship.friendIdString = friendIdString;
            return friendship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> friendNumBooks
        {
            get
            {
                return _friendNumBooks;
            }
            set
            {
                OnfriendNumBooksChanging(value);
                ReportPropertyChanging("friendNumBooks");
                _friendNumBooks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("friendNumBooks");
                OnfriendNumBooksChanged();
            }
        }
        private Nullable<global::System.Int32> _friendNumBooks;
        partial void OnfriendNumBooksChanging(Nullable<global::System.Int32> value);
        partial void OnfriendNumBooksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> friendNumFriends
        {
            get
            {
                return _friendNumFriends;
            }
            set
            {
                OnfriendNumFriendsChanging(value);
                ReportPropertyChanging("friendNumFriends");
                _friendNumFriends = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("friendNumFriends");
                OnfriendNumFriendsChanged();
            }
        }
        private Nullable<global::System.Int32> _friendNumFriends;
        partial void OnfriendNumFriendsChanging(Nullable<global::System.Int32> value);
        partial void OnfriendNumFriendsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String friendIdString
        {
            get
            {
                return _friendIdString;
            }
            set
            {
                if (_friendIdString != value)
                {
                    OnfriendIdStringChanging(value);
                    ReportPropertyChanging("friendIdString");
                    _friendIdString = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("friendIdString");
                    OnfriendIdStringChanged();
                }
            }
        }
        private global::System.String _friendIdString;
        partial void OnfriendIdStringChanging(global::System.String value);
        partial void OnfriendIdStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String rel
        {
            get
            {
                return _rel;
            }
            set
            {
                OnrelChanging(value);
                ReportPropertyChanging("rel");
                _rel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("rel");
                OnrelChanged();
            }
        }
        private global::System.String _rel;
        partial void OnrelChanging(global::System.String value);
        partial void OnrelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Friendship_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Friendship_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Friendship_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Friendship_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GoodReadsCrawlerModel.FK_Friendship_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static Genre CreateGenre(global::System.String name, global::System.Int32 userId)
        {
            Genre genre = new Genre();
            genre.name = name;
            genre.userId = userId;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Genre_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Genre_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Genre_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Genre_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GoodReadsCrawlerModel.FK_Genre_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Group CreateGroup(global::System.Int32 id)
        {
            Group group = new Group();
            group.id = id;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userCount
        {
            get
            {
                return _userCount;
            }
            set
            {
                OnuserCountChanging(value);
                ReportPropertyChanging("userCount");
                _userCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userCount");
                OnuserCountChanged();
            }
        }
        private Nullable<global::System.Int32> _userCount;
        partial void OnuserCountChanging(Nullable<global::System.Int32> value);
        partial void OnuserCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String category
        {
            get
            {
                return _category;
            }
            set
            {
                OncategoryChanging(value);
                ReportPropertyChanging("category");
                _category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("category");
                OncategoryChanged();
            }
        }
        private global::System.String _category;
        partial void OncategoryChanging(global::System.String value);
        partial void OncategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String subcategory
        {
            get
            {
                return _subcategory;
            }
            set
            {
                OnsubcategoryChanging(value);
                ReportPropertyChanging("subcategory");
                _subcategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("subcategory");
                OnsubcategoryChanged();
            }
        }
        private global::System.String _subcategory;
        partial void OnsubcategoryChanging(global::System.String value);
        partial void OnsubcategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastActivityAtString
        {
            get
            {
                return _lastActivityAtString;
            }
            set
            {
                OnlastActivityAtStringChanging(value);
                ReportPropertyChanging("lastActivityAtString");
                _lastActivityAtString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastActivityAtString");
                OnlastActivityAtStringChanged();
            }
        }
        private global::System.String _lastActivityAtString;
        partial void OnlastActivityAtStringChanging(global::System.String value);
        partial void OnlastActivityAtStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "GroupMember", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("GoodReadsCrawlerModel.GroupMember", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("GoodReadsCrawlerModel.GroupMember", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="title">Initial value of the title property.</param>
        public static List CreateList(global::System.String title)
        {
            List list = new List();
            list.title = title;
            return list;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                if (_title != value)
                {
                    OntitleChanging(value);
                    ReportPropertyChanging("title");
                    _title = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("title");
                    OntitleChanged();
                }
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numBooks
        {
            get
            {
                return _numBooks;
            }
            set
            {
                OnnumBooksChanging(value);
                ReportPropertyChanging("numBooks");
                _numBooks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numBooks");
                OnnumBooksChanged();
            }
        }
        private Nullable<global::System.Int32> _numBooks;
        partial void OnnumBooksChanging(Nullable<global::System.Int32> value);
        partial void OnnumBooksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numVoters
        {
            get
            {
                return _numVoters;
            }
            set
            {
                OnnumVotersChanging(value);
                ReportPropertyChanging("numVoters");
                _numVoters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numVoters");
                OnnumVotersChanged();
            }
        }
        private Nullable<global::System.Int32> _numVoters;
        partial void OnnumVotersChanging(Nullable<global::System.Int32> value);
        partial void OnnumVotersChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "ListVote", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("GoodReadsCrawlerModel.ListVote", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("GoodReadsCrawlerModel.ListVote", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="ReadingChallenge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReadingChallenge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReadingChallenge object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="challenge">Initial value of the challenge property.</param>
        public static ReadingChallenge CreateReadingChallenge(global::System.Int32 userId, global::System.String challenge)
        {
            ReadingChallenge readingChallenge = new ReadingChallenge();
            readingChallenge.userId = userId;
            readingChallenge.challenge = challenge;
            return readingChallenge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String challenge
        {
            get
            {
                return _challenge;
            }
            set
            {
                if (_challenge != value)
                {
                    OnchallengeChanging(value);
                    ReportPropertyChanging("challenge");
                    _challenge = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("challenge");
                    OnchallengeChanged();
                }
            }
        }
        private global::System.String _challenge;
        partial void OnchallengeChanging(global::System.String value);
        partial void OnchallengeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numBooksTarget
        {
            get
            {
                return _numBooksTarget;
            }
            set
            {
                OnnumBooksTargetChanging(value);
                ReportPropertyChanging("numBooksTarget");
                _numBooksTarget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numBooksTarget");
                OnnumBooksTargetChanged();
            }
        }
        private Nullable<global::System.Int32> _numBooksTarget;
        partial void OnnumBooksTargetChanging(Nullable<global::System.Int32> value);
        partial void OnnumBooksTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numBooksRead
        {
            get
            {
                return _numBooksRead;
            }
            set
            {
                OnnumBooksReadChanging(value);
                ReportPropertyChanging("numBooksRead");
                _numBooksRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numBooksRead");
                OnnumBooksReadChanged();
            }
        }
        private Nullable<global::System.Int32> _numBooksRead;
        partial void OnnumBooksReadChanging(Nullable<global::System.Int32> value);
        partial void OnnumBooksReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastUpdated
        {
            get
            {
                return _lastUpdated;
            }
            set
            {
                OnlastUpdatedChanging(value);
                ReportPropertyChanging("lastUpdated");
                _lastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastUpdated");
                OnlastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastUpdated;
        partial void OnlastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnlastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_ReadingChallenge_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="bookId">Initial value of the bookId property.</param>
        public static Review CreateReview(global::System.Int32 id, global::System.Int32 bookId)
        {
            Review review = new Review();
            review.id = id;
            review.bookId = bookId;
            return review;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bookId
        {
            get
            {
                return _bookId;
            }
            set
            {
                OnbookIdChanging(value);
                ReportPropertyChanging("bookId");
                _bookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bookId");
                OnbookIdChanged();
            }
        }
        private global::System.Int32 _bookId;
        partial void OnbookIdChanging(global::System.Int32 value);
        partial void OnbookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> foundOnPage
        {
            get
            {
                return _foundOnPage;
            }
            set
            {
                OnfoundOnPageChanging(value);
                ReportPropertyChanging("foundOnPage");
                _foundOnPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("foundOnPage");
                OnfoundOnPageChanged();
            }
        }
        private Nullable<global::System.Int32> _foundOnPage;
        partial void OnfoundOnPageChanging(Nullable<global::System.Int32> value);
        partial void OnfoundOnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> maxPage
        {
            get
            {
                return _maxPage;
            }
            set
            {
                OnmaxPageChanging(value);
                ReportPropertyChanging("maxPage");
                _maxPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maxPage");
                OnmaxPageChanged();
            }
        }
        private Nullable<global::System.Int32> _maxPage;
        partial void OnmaxPageChanging(Nullable<global::System.Int32> value);
        partial void OnmaxPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _userId;
        partial void OnuserIdChanging(Nullable<global::System.Int32> value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userIdString
        {
            get
            {
                return _userIdString;
            }
            set
            {
                OnuserIdStringChanging(value);
                ReportPropertyChanging("userIdString");
                _userIdString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userIdString");
                OnuserIdStringChanged();
            }
        }
        private global::System.String _userIdString;
        partial void OnuserIdStringChanging(global::System.String value);
        partial void OnuserIdStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String reviewContent
        {
            get
            {
                return _reviewContent;
            }
            set
            {
                OnreviewContentChanging(value);
                ReportPropertyChanging("reviewContent");
                _reviewContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("reviewContent");
                OnreviewContentChanged();
            }
        }
        private global::System.String _reviewContent;
        partial void OnreviewContentChanging(global::System.String value);
        partial void OnreviewContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> starRating
        {
            get
            {
                return _starRating;
            }
            set
            {
                OnstarRatingChanging(value);
                ReportPropertyChanging("starRating");
                _starRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("starRating");
                OnstarRatingChanged();
            }
        }
        private Nullable<global::System.Int16> _starRating;
        partial void OnstarRatingChanging(Nullable<global::System.Int16> value);
        partial void OnstarRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> publishDate
        {
            get
            {
                return _publishDate;
            }
            set
            {
                OnpublishDateChanging(value);
                ReportPropertyChanging("publishDate");
                _publishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("publishDate");
                OnpublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _publishDate;
        partial void OnpublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnpublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String recommendedFor
        {
            get
            {
                return _recommendedFor;
            }
            set
            {
                OnrecommendedForChanging(value);
                ReportPropertyChanging("recommendedFor");
                _recommendedFor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("recommendedFor");
                OnrecommendedForChanged();
            }
        }
        private global::System.String _recommendedFor;
        partial void OnrecommendedForChanging(global::System.String value);
        partial void OnrecommendedForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numComments
        {
            get
            {
                return _numComments;
            }
            set
            {
                OnnumCommentsChanging(value);
                ReportPropertyChanging("numComments");
                _numComments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numComments");
                OnnumCommentsChanged();
            }
        }
        private Nullable<global::System.Int32> _numComments;
        partial void OnnumCommentsChanging(Nullable<global::System.Int32> value);
        partial void OnnumCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Review_Book", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("GoodReadsCrawlerModel.FK_Review_Book", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("GoodReadsCrawlerModel.FK_Review_Book", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("GoodReadsCrawlerModel.FK_Review_Book", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("GoodReadsCrawlerModel.FK_Review_Book", "Book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Review_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Review_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Review_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GoodReadsCrawlerModel.FK_Review_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GoodReadsCrawlerModel.FK_Review_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GoodReadsCrawlerModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userIdString">Initial value of the userIdString property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userIdString)
        {
            User user = new User();
            user.id = id;
            user.userIdString = userIdString;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userIdString
        {
            get
            {
                return _userIdString;
            }
            set
            {
                OnuserIdStringChanging(value);
                ReportPropertyChanging("userIdString");
                _userIdString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userIdString");
                OnuserIdStringChanged();
            }
        }
        private global::System.String _userIdString;
        partial void OnuserIdStringChanging(global::System.String value);
        partial void OnuserIdStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numRatings
        {
            get
            {
                return _numRatings;
            }
            set
            {
                OnnumRatingsChanging(value);
                ReportPropertyChanging("numRatings");
                _numRatings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numRatings");
                OnnumRatingsChanged();
            }
        }
        private Nullable<global::System.Int32> _numRatings;
        partial void OnnumRatingsChanging(Nullable<global::System.Int32> value);
        partial void OnnumRatingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numReviews
        {
            get
            {
                return _numReviews;
            }
            set
            {
                OnnumReviewsChanging(value);
                ReportPropertyChanging("numReviews");
                _numReviews = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numReviews");
                OnnumReviewsChanged();
            }
        }
        private Nullable<global::System.Int32> _numReviews;
        partial void OnnumReviewsChanging(Nullable<global::System.Int32> value);
        partial void OnnumReviewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> avgRating
        {
            get
            {
                return _avgRating;
            }
            set
            {
                OnavgRatingChanging(value);
                ReportPropertyChanging("avgRating");
                _avgRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("avgRating");
                OnavgRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _avgRating;
        partial void OnavgRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnavgRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numFriends
        {
            get
            {
                return _numFriends;
            }
            set
            {
                OnnumFriendsChanging(value);
                ReportPropertyChanging("numFriends");
                _numFriends = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numFriends");
                OnnumFriendsChanged();
            }
        }
        private Nullable<global::System.Int32> _numFriends;
        partial void OnnumFriendsChanging(Nullable<global::System.Int32> value);
        partial void OnnumFriendsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLibrarian
        {
            get
            {
                return _IsLibrarian;
            }
            set
            {
                OnIsLibrarianChanging(value);
                ReportPropertyChanging("IsLibrarian");
                _IsLibrarian = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLibrarian");
                OnIsLibrarianChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLibrarian;
        partial void OnIsLibrarianChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLibrarianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAuthor
        {
            get
            {
                return _IsAuthor;
            }
            set
            {
                OnIsAuthorChanging(value);
                ReportPropertyChanging("IsAuthor");
                _IsAuthor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAuthor");
                OnIsAuthorChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAuthor;
        partial void OnIsAuthorChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String badge1
        {
            get
            {
                return _badge1;
            }
            set
            {
                Onbadge1Changing(value);
                ReportPropertyChanging("badge1");
                _badge1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("badge1");
                Onbadge1Changed();
            }
        }
        private global::System.String _badge1;
        partial void Onbadge1Changing(global::System.String value);
        partial void Onbadge1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String badge2
        {
            get
            {
                return _badge2;
            }
            set
            {
                Onbadge2Changing(value);
                ReportPropertyChanging("badge2");
                _badge2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("badge2");
                Onbadge2Changed();
            }
        }
        private global::System.String _badge2;
        partial void Onbadge2Changing(global::System.String value);
        partial void Onbadge2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String badge3
        {
            get
            {
                return _badge3;
            }
            set
            {
                Onbadge3Changing(value);
                ReportPropertyChanging("badge3");
                _badge3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("badge3");
                Onbadge3Changed();
            }
        }
        private global::System.String _badge3;
        partial void Onbadge3Changing(global::System.String value);
        partial void Onbadge3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String badge4
        {
            get
            {
                return _badge4;
            }
            set
            {
                Onbadge4Changing(value);
                ReportPropertyChanging("badge4");
                _badge4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("badge4");
                Onbadge4Changed();
            }
        }
        private global::System.String _badge4;
        partial void Onbadge4Changing(global::System.String value);
        partial void Onbadge4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String badge5
        {
            get
            {
                return _badge5;
            }
            set
            {
                Onbadge5Changing(value);
                ReportPropertyChanging("badge5");
                _badge5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("badge5");
                Onbadge5Changed();
            }
        }
        private global::System.String _badge5;
        partial void Onbadge5Changing(global::System.String value);
        partial void Onbadge5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> whenReviewsAdded
        {
            get
            {
                return _whenReviewsAdded;
            }
            set
            {
                OnwhenReviewsAddedChanging(value);
                ReportPropertyChanging("whenReviewsAdded");
                _whenReviewsAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("whenReviewsAdded");
                OnwhenReviewsAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _whenReviewsAdded;
        partial void OnwhenReviewsAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnwhenReviewsAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastUpdated
        {
            get
            {
                return _lastUpdated;
            }
            set
            {
                OnlastUpdatedChanging(value);
                ReportPropertyChanging("lastUpdated");
                _lastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastUpdated");
                OnlastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastUpdated;
        partial void OnlastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnlastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numGroups
        {
            get
            {
                return _numGroups;
            }
            set
            {
                OnnumGroupsChanging(value);
                ReportPropertyChanging("numGroups");
                _numGroups = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numGroups");
                OnnumGroupsChanged();
            }
        }
        private Nullable<global::System.Int32> _numGroups;
        partial void OnnumGroupsChanging(Nullable<global::System.Int32> value);
        partial void OnnumGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quizNumQuestions
        {
            get
            {
                return _quizNumQuestions;
            }
            set
            {
                OnquizNumQuestionsChanging(value);
                ReportPropertyChanging("quizNumQuestions");
                _quizNumQuestions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quizNumQuestions");
                OnquizNumQuestionsChanged();
            }
        }
        private Nullable<global::System.Int32> _quizNumQuestions;
        partial void OnquizNumQuestionsChanging(Nullable<global::System.Int32> value);
        partial void OnquizNumQuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quizNumCorrect
        {
            get
            {
                return _quizNumCorrect;
            }
            set
            {
                OnquizNumCorrectChanging(value);
                ReportPropertyChanging("quizNumCorrect");
                _quizNumCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quizNumCorrect");
                OnquizNumCorrectChanged();
            }
        }
        private Nullable<global::System.Int32> _quizNumCorrect;
        partial void OnquizNumCorrectChanging(Nullable<global::System.Int32> value);
        partial void OnquizNumCorrectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quizRank
        {
            get
            {
                return _quizRank;
            }
            set
            {
                OnquizRankChanging(value);
                ReportPropertyChanging("quizRank");
                _quizRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quizRank");
                OnquizRankChanged();
            }
        }
        private Nullable<global::System.Int32> _quizRank;
        partial void OnquizRankChanging(Nullable<global::System.Int32> value);
        partial void OnquizRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quizRankOutOf
        {
            get
            {
                return _quizRankOutOf;
            }
            set
            {
                OnquizRankOutOfChanging(value);
                ReportPropertyChanging("quizRankOutOf");
                _quizRankOutOf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quizRankOutOf");
                OnquizRankOutOfChanged();
            }
        }
        private Nullable<global::System.Int32> _quizRankOutOf;
        partial void OnquizRankOutOfChanging(Nullable<global::System.Int32> value);
        partial void OnquizRankOutOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numFavouriteAuthors
        {
            get
            {
                return _numFavouriteAuthors;
            }
            set
            {
                OnnumFavouriteAuthorsChanging(value);
                ReportPropertyChanging("numFavouriteAuthors");
                _numFavouriteAuthors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numFavouriteAuthors");
                OnnumFavouriteAuthorsChanged();
            }
        }
        private Nullable<global::System.Int32> _numFavouriteAuthors;
        partial void OnnumFavouriteAuthorsChanging(Nullable<global::System.Int32> value);
        partial void OnnumFavouriteAuthorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numFollowers
        {
            get
            {
                return _numFollowers;
            }
            set
            {
                OnnumFollowersChanging(value);
                ReportPropertyChanging("numFollowers");
                _numFollowers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numFollowers");
                OnnumFollowersChanged();
            }
        }
        private Nullable<global::System.Int32> _numFollowers;
        partial void OnnumFollowersChanging(Nullable<global::System.Int32> value);
        partial void OnnumFollowersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numUserIsFollowing
        {
            get
            {
                return _numUserIsFollowing;
            }
            set
            {
                OnnumUserIsFollowingChanging(value);
                ReportPropertyChanging("numUserIsFollowing");
                _numUserIsFollowing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numUserIsFollowing");
                OnnumUserIsFollowingChanged();
            }
        }
        private Nullable<global::System.Int32> _numUserIsFollowing;
        partial void OnnumUserIsFollowingChanging(Nullable<global::System.Int32> value);
        partial void OnnumUserIsFollowingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numShelves
        {
            get
            {
                return _numShelves;
            }
            set
            {
                OnnumShelvesChanging(value);
                ReportPropertyChanging("numShelves");
                _numShelves = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numShelves");
                OnnumShelvesChanged();
            }
        }
        private Nullable<global::System.Int32> _numShelves;
        partial void OnnumShelvesChanging(Nullable<global::System.Int32> value);
        partial void OnnumShelvesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String authorUrl
        {
            get
            {
                return _authorUrl;
            }
            set
            {
                OnauthorUrlChanging(value);
                ReportPropertyChanging("authorUrl");
                _authorUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("authorUrl");
                OnauthorUrlChanged();
            }
        }
        private global::System.String _authorUrl;
        partial void OnauthorUrlChanging(global::System.String value);
        partial void OnauthorUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrivate
        {
            get
            {
                return _IsPrivate;
            }
            set
            {
                OnIsPrivateChanging(value);
                ReportPropertyChanging("IsPrivate");
                _IsPrivate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrivate");
                OnIsPrivateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrivate;
        partial void OnIsPrivateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrivateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Review_User", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("GoodReadsCrawlerModel.FK_Review_User", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("GoodReadsCrawlerModel.FK_Review_User", "Review", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Friendship_User", "Friendship")]
        public EntityCollection<Friendship> Friendships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friendship>("GoodReadsCrawlerModel.FK_Friendship_User", "Friendship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friendship>("GoodReadsCrawlerModel.FK_Friendship_User", "Friendship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Activity_User", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("GoodReadsCrawlerModel.FK_Activity_User", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("GoodReadsCrawlerModel.FK_Activity_User", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_Genre_User", "Genre")]
        public EntityCollection<Genre> Genres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("GoodReadsCrawlerModel.FK_Genre_User", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("GoodReadsCrawlerModel.FK_Genre_User", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "FK_ReadingChallenge_User", "ReadingChallenge")]
        public EntityCollection<ReadingChallenge> ReadingChallenges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReadingChallenge>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "ReadingChallenge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReadingChallenge>("GoodReadsCrawlerModel.FK_ReadingChallenge_User", "ReadingChallenge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "GroupMember", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("GoodReadsCrawlerModel.GroupMember", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("GoodReadsCrawlerModel.GroupMember", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GoodReadsCrawlerModel", "ListVote", "List")]
        public EntityCollection<List> Lists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<List>("GoodReadsCrawlerModel.ListVote", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<List>("GoodReadsCrawlerModel.ListVote", "List", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
